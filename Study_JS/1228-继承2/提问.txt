1. call和apply的作用？和异同点？
	作用相同：执行函数，并重定向this。
	异：传参形式不同，call是从第二个参数起依次传入参数，apply是将参数放入数组作为第二个参数传入

2. hasOwnpoperty是什么？作用是什么？
	判断属性是否挂载在自身上，不会沿着原型链检查下去
	
3. instanceof是什么？作用是？
	判断构造函数的原型是否在实例的原型链上
	如 cat instanceOf Cat  即判断Cat的原型是否在cat实例的原型链上

4. 简述一下原型链？
	即在实例、构造函数、Object上创建了一条能查找属性、方法是否在其链上

5. function Person(){
	
   }
	Person.prototype.arr = [1,2,3,4];
	var p = new Person();
	p.arr[0] = "a";
问：Person.prototype.arr的值为？
	× [1,2,3,4] 2  
	√ ["a",2,3,4] 2

6. var n = 0;
   var m = !{} ? n++ : ++n && n++;
     问：m,n的值为？

	m = 1,n = 2;
	对象是永真的；&&与运算符当左边为false时返回左边运算值，左边边为true时返回右边运算值


















7. 总结一下函数调用的方式，和调用时this的指向？